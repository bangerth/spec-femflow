// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorDataBase< 1 ,  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorDataBase< 1 ,  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorDataBase< 1 ,  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorDataBase< 2 ,  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorDataBase< 2 ,  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorDataBase< 2 ,  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorDataBase< 3 ,  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorDataBase< 3 ,  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorDataBase< 3 ,  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< Vector<double> ,
  1 ,
  1 >;
 template class VectorData<const  Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData< Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData<const  Vector<double> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< Vector<double> ,
  1 ,
  2 >;
 template class VectorData<const  Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData< Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData<const  Vector<double> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< Vector<double> ,
  1 ,
  3 >;
 template class VectorData<const  Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData< Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData<const  Vector<double> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< Vector<double> ,
  2 ,
  1 >;
 template class VectorData<const  Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData< Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData<const  Vector<double> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< Vector<double> ,
  2 ,
  2 >;
 template class VectorData<const  Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData< Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData<const  Vector<double> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< Vector<double> ,
  2 ,
  3 >;
 template class VectorData<const  Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData< Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData<const  Vector<double> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< Vector<double> ,
  3 ,
  1 >;
 template class VectorData<const  Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData< Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData<const  Vector<double> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< Vector<double> ,
  3 ,
  2 >;
 template class VectorData<const  Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData< Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData<const  Vector<double> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< Vector<double> ,
  3 ,
  3 >;
 template class VectorData<const  Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData< Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData<const  Vector<double> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< Vector<float> ,
  1 ,
  1 >;
 template class VectorData<const  Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData< Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData<const  Vector<float> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< Vector<float> ,
  1 ,
  2 >;
 template class VectorData<const  Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData< Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData<const  Vector<float> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< Vector<float> ,
  1 ,
  3 >;
 template class VectorData<const  Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData< Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData<const  Vector<float> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< Vector<float> ,
  2 ,
  1 >;
 template class VectorData<const  Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData< Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData<const  Vector<float> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< Vector<float> ,
  2 ,
  2 >;
 template class VectorData<const  Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData< Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData<const  Vector<float> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< Vector<float> ,
  2 ,
  3 >;
 template class VectorData<const  Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData< Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData<const  Vector<float> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< Vector<float> ,
  3 ,
  1 >;
 template class VectorData<const  Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData< Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData<const  Vector<float> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< Vector<float> ,
  3 ,
  2 >;
 template class VectorData<const  Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData< Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData<const  Vector<float> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< Vector<float> ,
  3 ,
  3 >;
 template class VectorData<const  Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData< Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData<const  Vector<float> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< BlockVector<double> ,
  1 ,
  1 >;
 template class VectorData<const  BlockVector<double> ,
  1 ,
  1 >;
 template class MGVectorData< BlockVector<double> ,
  1 ,
  1 >;
 template class MGVectorData<const  BlockVector<double> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< BlockVector<double> ,
  1 ,
  2 >;
 template class VectorData<const  BlockVector<double> ,
  1 ,
  2 >;
 template class MGVectorData< BlockVector<double> ,
  1 ,
  2 >;
 template class MGVectorData<const  BlockVector<double> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< BlockVector<double> ,
  1 ,
  3 >;
 template class VectorData<const  BlockVector<double> ,
  1 ,
  3 >;
 template class MGVectorData< BlockVector<double> ,
  1 ,
  3 >;
 template class MGVectorData<const  BlockVector<double> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< BlockVector<double> ,
  2 ,
  1 >;
 template class VectorData<const  BlockVector<double> ,
  2 ,
  1 >;
 template class MGVectorData< BlockVector<double> ,
  2 ,
  1 >;
 template class MGVectorData<const  BlockVector<double> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< BlockVector<double> ,
  2 ,
  2 >;
 template class VectorData<const  BlockVector<double> ,
  2 ,
  2 >;
 template class MGVectorData< BlockVector<double> ,
  2 ,
  2 >;
 template class MGVectorData<const  BlockVector<double> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< BlockVector<double> ,
  2 ,
  3 >;
 template class VectorData<const  BlockVector<double> ,
  2 ,
  3 >;
 template class MGVectorData< BlockVector<double> ,
  2 ,
  3 >;
 template class MGVectorData<const  BlockVector<double> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< BlockVector<double> ,
  3 ,
  1 >;
 template class VectorData<const  BlockVector<double> ,
  3 ,
  1 >;
 template class MGVectorData< BlockVector<double> ,
  3 ,
  1 >;
 template class MGVectorData<const  BlockVector<double> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< BlockVector<double> ,
  3 ,
  2 >;
 template class VectorData<const  BlockVector<double> ,
  3 ,
  2 >;
 template class MGVectorData< BlockVector<double> ,
  3 ,
  2 >;
 template class MGVectorData<const  BlockVector<double> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< BlockVector<double> ,
  3 ,
  3 >;
 template class VectorData<const  BlockVector<double> ,
  3 ,
  3 >;
 template class MGVectorData< BlockVector<double> ,
  3 ,
  3 >;
 template class MGVectorData<const  BlockVector<double> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< BlockVector<float> ,
  1 ,
  1 >;
 template class VectorData<const  BlockVector<float> ,
  1 ,
  1 >;
 template class MGVectorData< BlockVector<float> ,
  1 ,
  1 >;
 template class MGVectorData<const  BlockVector<float> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< BlockVector<float> ,
  1 ,
  2 >;
 template class VectorData<const  BlockVector<float> ,
  1 ,
  2 >;
 template class MGVectorData< BlockVector<float> ,
  1 ,
  2 >;
 template class MGVectorData<const  BlockVector<float> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< BlockVector<float> ,
  1 ,
  3 >;
 template class VectorData<const  BlockVector<float> ,
  1 ,
  3 >;
 template class MGVectorData< BlockVector<float> ,
  1 ,
  3 >;
 template class MGVectorData<const  BlockVector<float> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< BlockVector<float> ,
  2 ,
  1 >;
 template class VectorData<const  BlockVector<float> ,
  2 ,
  1 >;
 template class MGVectorData< BlockVector<float> ,
  2 ,
  1 >;
 template class MGVectorData<const  BlockVector<float> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< BlockVector<float> ,
  2 ,
  2 >;
 template class VectorData<const  BlockVector<float> ,
  2 ,
  2 >;
 template class MGVectorData< BlockVector<float> ,
  2 ,
  2 >;
 template class MGVectorData<const  BlockVector<float> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< BlockVector<float> ,
  2 ,
  3 >;
 template class VectorData<const  BlockVector<float> ,
  2 ,
  3 >;
 template class MGVectorData< BlockVector<float> ,
  2 ,
  3 >;
 template class MGVectorData<const  BlockVector<float> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< BlockVector<float> ,
  3 ,
  1 >;
 template class VectorData<const  BlockVector<float> ,
  3 ,
  1 >;
 template class MGVectorData< BlockVector<float> ,
  3 ,
  1 >;
 template class MGVectorData<const  BlockVector<float> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< BlockVector<float> ,
  3 ,
  2 >;
 template class VectorData<const  BlockVector<float> ,
  3 ,
  2 >;
 template class MGVectorData< BlockVector<float> ,
  3 ,
  2 >;
 template class MGVectorData<const  BlockVector<float> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< BlockVector<float> ,
  3 ,
  3 >;
 template class VectorData<const  BlockVector<float> ,
  3 ,
  3 >;
 template class MGVectorData< BlockVector<float> ,
  3 ,
  3 >;
 template class MGVectorData<const  BlockVector<float> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::Vector<double> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::Vector<double> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::Vector<double> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::Vector<double> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::Vector<double> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::Vector<double> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::Vector<double> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::Vector<double> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::Vector<double> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<double> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(54))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::Vector<float> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(55))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::Vector<float> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(56))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::Vector<float> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(57))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::Vector<float> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(58))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::Vector<float> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(59))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::Vector<float> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(60))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::Vector<float> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(61))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::Vector<float> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(62))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::Vector<float> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::Vector<float> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(63))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(64))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(65))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(66))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(67))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(68))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(69))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(70))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(71))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<double> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<double> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(72))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(73))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(74))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(75))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(76))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(77))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(78))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(79))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(80))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::Vector<float> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::Vector<float> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(81))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(82))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(83))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(84))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(85))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(86))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(87))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(88))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(89))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<double> ,
  3 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(90))
namespace MeshWorker
 {
#if  1  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(91))
namespace MeshWorker
 {
#if  1  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(92))
namespace MeshWorker
 {
#if  1  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  1 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(93))
namespace MeshWorker
 {
#if  2  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(94))
namespace MeshWorker
 {
#if  2  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(95))
namespace MeshWorker
 {
#if  2  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  2 ,
  3 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(96))
namespace MeshWorker
 {
#if  3  <=  1 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  1 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  1 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  1 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  1 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(97))
namespace MeshWorker
 {
#if  3  <=  2 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  2 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  2 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  2 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  2 >;
#endif
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(98))
namespace MeshWorker
 {
#if  3  <=  3 
 template class VectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  3 >;
 template class VectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  3 >;
 template class MGVectorData< LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  3 >;
 template class MGVectorData<const  LinearAlgebra::distributed::BlockVector<float> ,
  3 ,
  3 >;
#endif
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
