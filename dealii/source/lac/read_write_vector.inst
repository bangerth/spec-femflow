// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace LinearAlgebra
 {
 template class ReadWriteVector< double >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace LinearAlgebra
 {
 template class ReadWriteVector< float >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace LinearAlgebra
 {
 template void
 ReadWriteVector< double >::reinit< double >(const ReadWriteVector< double > &, const bool);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace LinearAlgebra
 {
 template void
 ReadWriteVector< double >::reinit< float >(const ReadWriteVector< float > &, const bool);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace LinearAlgebra
 {
 template void
 ReadWriteVector< float >::reinit< double >(const ReadWriteVector< double > &, const bool);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace LinearAlgebra
 {
 template void
 ReadWriteVector< float >::reinit< float >(const ReadWriteVector< float > &, const bool);
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
