// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void select_vmult<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,1>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,1>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void select_vmult<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,1>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,1>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void select_vmult<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,2>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,2>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void select_vmult<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,4>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,4>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void select_vmult<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,4>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,4>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void select_vmult<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  1 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,8>  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  1 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,8>  *,  1 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void select_vmult<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,1>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,1>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void select_vmult<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,1>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,1>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void select_vmult<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,2>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,2>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void select_vmult<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,4>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,4>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void select_vmult<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,4>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,4>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void select_vmult<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  2 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,8>  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  2 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,8>  *,  2 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void select_vmult<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,1>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,1>  * dst,
 const  VectorizedArray<double,1>  * src,
 AlignedVector< VectorizedArray<double,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,1>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,1>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void select_vmult<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,1>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,1>  * dst,
 const  VectorizedArray<float,1>  * src,
 AlignedVector< VectorizedArray<float,1> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,1>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,1>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void select_vmult<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,2>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,2>  * dst,
 const  VectorizedArray<double,2>  * src,
 AlignedVector< VectorizedArray<double,2> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,2>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,2>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void select_vmult<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,4>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,4>  * dst,
 const  VectorizedArray<float,4>  * src,
 AlignedVector< VectorizedArray<float,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,4>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,4>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void select_vmult<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<double,4>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<double,4>  * dst,
 const  VectorizedArray<double,4>  * src,
 AlignedVector< VectorizedArray<double,4> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<double,4>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<double,4>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void select_vmult<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  3 >
 &mass_matrix,
 const std::array<const  VectorizedArray<float,8>  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  VectorizedArray<float,8>  * dst,
 const  VectorizedArray<float,8>  * src,
 AlignedVector< VectorizedArray<float,8> > &tmp,
 const unsigned int n_rows,
 const std::array<const  VectorizedArray<float,8>  *,  3 >
 &eigenvectors,
 const std::array<const  VectorizedArray<float,8>  *,  3 >
 &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void select_vmult<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  1 > &mass_matrix,
 const std::array<const  double  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  1 > &eigenvectors,
 const std::array<const  double  *,  1 > &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void select_vmult<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  1 > &mass_matrix,
 const std::array<const  float  *,  1 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  1 > &eigenvectors,
 const std::array<const  float  *,  1 > &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void select_vmult<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  2 > &mass_matrix,
 const std::array<const  double  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  2 > &eigenvectors,
 const std::array<const  double  *,  2 > &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void select_vmult<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  2 > &mass_matrix,
 const std::array<const  float  *,  2 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  2 > &eigenvectors,
 const std::array<const  float  *,  2 > &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void select_vmult<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  3 > &mass_matrix,
 const std::array<const  double  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  double  * dst,
 const  double  * src,
 AlignedVector< double > & tmp,
 const unsigned int n_rows,
 const std::array<const  double  *,  3 > &eigenvectors,
 const std::array<const  double  *,  3 > &eigenvalues);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void select_vmult<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  3 > &mass_matrix,
 const std::array<const  float  *,  3 >
 &derivative_matrix);

 template void select_apply_inverse<1>(
  float  * dst,
 const  float  * src,
 AlignedVector< float > & tmp,
 const unsigned int n_rows,
 const std::array<const  float  *,  3 > &eigenvectors,
 const std::array<const  float  *,  3 > &eigenvalues);
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
