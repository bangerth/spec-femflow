// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class AffineConstraints< double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class AffineConstraints< float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void AffineConstraints< double >::condense<Vector< double >>(SparseMatrix< double > &,
 Vector< double > &) const;

 template void AffineConstraints< double >::condense<BlockVector< double >>(
 BlockSparseMatrix< double > &, BlockVector< double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void AffineConstraints< float >::condense<Vector< float >>(SparseMatrix< float > &,
 Vector< float > &) const;

 template void AffineConstraints< float >::condense<BlockVector< float >>(
 BlockSparseMatrix< float > &, BlockVector< float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void AffineConstraints< double >::condense< Vector < double >>(const  Vector < double > &,  Vector < double > &)
 const;

 template void
 AffineConstraints< double >::condense<LinearAlgebra::distributed:: Vector < double >>(
 const LinearAlgebra::distributed:: Vector < double > &,
 LinearAlgebra::distributed:: Vector < double > &) const;

 template void AffineConstraints< double >::condense< Vector < double >>( Vector < double > & vec) const;

 template void
 AffineConstraints< double >::condense<LinearAlgebra::distributed:: Vector < double >>(
 LinearAlgebra::distributed:: Vector < double > & vec) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void AffineConstraints< double >::condense< BlockVector < double >>(const  BlockVector < double > &,  BlockVector < double > &)
 const;

 template void
 AffineConstraints< double >::condense<LinearAlgebra::distributed:: BlockVector < double >>(
 const LinearAlgebra::distributed:: BlockVector < double > &,
 LinearAlgebra::distributed:: BlockVector < double > &) const;

 template void AffineConstraints< double >::condense< BlockVector < double >>( BlockVector < double > & vec) const;

 template void
 AffineConstraints< double >::condense<LinearAlgebra::distributed:: BlockVector < double >>(
 LinearAlgebra::distributed:: BlockVector < double > & vec) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void AffineConstraints< float >::condense< Vector < float >>(const  Vector < float > &,  Vector < float > &)
 const;

 template void
 AffineConstraints< float >::condense<LinearAlgebra::distributed:: Vector < float >>(
 const LinearAlgebra::distributed:: Vector < float > &,
 LinearAlgebra::distributed:: Vector < float > &) const;

 template void AffineConstraints< float >::condense< Vector < float >>( Vector < float > & vec) const;

 template void
 AffineConstraints< float >::condense<LinearAlgebra::distributed:: Vector < float >>(
 LinearAlgebra::distributed:: Vector < float > & vec) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void AffineConstraints< float >::condense< BlockVector < float >>(const  BlockVector < float > &,  BlockVector < float > &)
 const;

 template void
 AffineConstraints< float >::condense<LinearAlgebra::distributed:: BlockVector < float >>(
 const LinearAlgebra::distributed:: BlockVector < float > &,
 LinearAlgebra::distributed:: BlockVector < float > &) const;

 template void AffineConstraints< float >::condense< BlockVector < float >>( BlockVector < float > & vec) const;

 template void
 AffineConstraints< float >::condense<LinearAlgebra::distributed:: BlockVector < float >>(
 LinearAlgebra::distributed:: BlockVector < float > & vec) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void AffineConstraints< double >::distribute_local_to_global< Vector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
  Vector < double > &,
 const FullMatrix< double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 LinearAlgebra::distributed:: Vector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: Vector < double > &,
 const FullMatrix< double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< Vector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
  Vector < double > &,
 const FullMatrix< double > &,
 bool) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 LinearAlgebra::distributed:: Vector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: Vector < double > &,
 const FullMatrix< double > &,
 bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void AffineConstraints< double >::distribute_local_to_global< BlockVector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
  BlockVector < double > &,
 const FullMatrix< double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 LinearAlgebra::distributed:: BlockVector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: BlockVector < double > &,
 const FullMatrix< double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< BlockVector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
  BlockVector < double > &,
 const FullMatrix< double > &,
 bool) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 LinearAlgebra::distributed:: BlockVector < double >>(
 const Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: BlockVector < double > &,
 const FullMatrix< double > &,
 bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void AffineConstraints< float >::distribute_local_to_global< Vector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
  Vector < float > &,
 const FullMatrix< float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 LinearAlgebra::distributed:: Vector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: Vector < float > &,
 const FullMatrix< float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< Vector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
  Vector < float > &,
 const FullMatrix< float > &,
 bool) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 LinearAlgebra::distributed:: Vector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: Vector < float > &,
 const FullMatrix< float > &,
 bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void AffineConstraints< float >::distribute_local_to_global< BlockVector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
  BlockVector < float > &,
 const FullMatrix< float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 LinearAlgebra::distributed:: BlockVector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: BlockVector < float > &,
 const FullMatrix< float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< BlockVector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
  BlockVector < float > &,
 const FullMatrix< float > &,
 bool) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 LinearAlgebra::distributed:: BlockVector < float >>(
 const Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 LinearAlgebra::distributed:: BlockVector < float > &,
 const FullMatrix< float > &,
 bool) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void
 AffineConstraints< double >::distribute_local_to_global< FullMatrix < double >, Vector< double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  FullMatrix < double > &,
 Vector< double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global< FullMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
  FullMatrix < double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< FullMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  FullMatrix < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void
 AffineConstraints< double >::distribute_local_to_global< SparseMatrix < double >, Vector< double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrix < double > &,
 Vector< double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global< SparseMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrix < double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< SparseMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrix < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void
 AffineConstraints< double >::distribute_local_to_global< SparseMatrixEZ < double >, Vector< double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrixEZ < double > &,
 Vector< double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global< SparseMatrixEZ < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrixEZ < double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< SparseMatrixEZ < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  SparseMatrixEZ < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void
 AffineConstraints< double >::distribute_local_to_global< ChunkSparseMatrix < double >, Vector< double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  ChunkSparseMatrix < double > &,
 Vector< double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global< ChunkSparseMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
  ChunkSparseMatrix < double > &) const;

 template void AffineConstraints< double >::distribute_local_to_global< ChunkSparseMatrix < double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
  ChunkSparseMatrix < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void
 AffineConstraints< float >::distribute_local_to_global< FullMatrix < float >, Vector< float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  FullMatrix < float > &,
 Vector< float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global< FullMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
  FullMatrix < float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< FullMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  FullMatrix < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void
 AffineConstraints< float >::distribute_local_to_global< SparseMatrix < float >, Vector< float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrix < float > &,
 Vector< float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global< SparseMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrix < float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< SparseMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrix < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void
 AffineConstraints< float >::distribute_local_to_global< SparseMatrixEZ < float >, Vector< float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrixEZ < float > &,
 Vector< float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global< SparseMatrixEZ < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrixEZ < float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< SparseMatrixEZ < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  SparseMatrixEZ < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void
 AffineConstraints< float >::distribute_local_to_global< ChunkSparseMatrix < float >, Vector< float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  ChunkSparseMatrix < float > &,
 Vector< float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global< ChunkSparseMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
  ChunkSparseMatrix < float > &) const;

 template void AffineConstraints< float >::distribute_local_to_global< ChunkSparseMatrix < float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
  ChunkSparseMatrix < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix< Vector < double >>>(const FullMatrix< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix< Vector < double >> &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >>>(
 const FullMatrix< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >> &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix< Vector < double >>,
  Vector < double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix< Vector < double >> &,
  Vector < double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >>,
 LinearAlgebra::distributed:: Vector < double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >> &,
 LinearAlgebra::distributed:: Vector < double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >>,
  Vector < double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < double >> &,
  Vector < double > &,
 bool,
 std::integral_constant<bool, false>) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix< BlockVector < double >>>(const FullMatrix< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix< BlockVector < double >> &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >>>(
 const FullMatrix< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >> &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix< BlockVector < double >>,
  BlockVector < double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix< BlockVector < double >> &,
  BlockVector < double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >>,
 LinearAlgebra::distributed:: BlockVector < double >>(
 const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >> &,
 LinearAlgebra::distributed:: BlockVector < double > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >>,
  BlockVector < double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < double >> &,
  BlockVector < double > &,
 bool,
 std::integral_constant<bool, false>) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix< Vector < float >>>(const FullMatrix< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix< Vector < float >> &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >>>(
 const FullMatrix< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >> &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix< Vector < float >>,
  Vector < float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix< Vector < float >> &,
  Vector < float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >>,
 LinearAlgebra::distributed:: Vector < float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >> &,
 LinearAlgebra::distributed:: Vector < float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >>,
  Vector < float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: Vector < float >> &,
  Vector < float > &,
 bool,
 std::integral_constant<bool, false>) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix< BlockVector < float >>>(const FullMatrix< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix< BlockVector < float >> &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >>>(
 const FullMatrix< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >> &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix< BlockVector < float >>,
  BlockVector < float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix< BlockVector < float >> &,
  BlockVector < float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >>,
 LinearAlgebra::distributed:: BlockVector < float >>(
 const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >> &,
 LinearAlgebra::distributed:: BlockVector < float > &,
 bool,
 std::integral_constant<bool, false>) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >>,
  BlockVector < float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<size_type> &,
 DiagonalMatrix<LinearAlgebra::distributed:: BlockVector < float >> &,
  BlockVector < float > &,
 bool,
 std::integral_constant<bool, false>) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
#ifdef DEAL_II_WITH_TRILINOS
 template void AffineConstraints<double>::distribute_local_to_global<
 TrilinosWrappers::SparseMatrix,
 LinearAlgebra::distributed:: Vector <double>>(
 const FullMatrix<double> &,
 const Vector<double> &,
 const std::vector<size_type> &,
 TrilinosWrappers::SparseMatrix &,
 LinearAlgebra::distributed:: Vector <double> &,
 bool,
 std::integral_constant<bool, false>) const;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
#ifdef DEAL_II_WITH_TRILINOS
 template void AffineConstraints<double>::distribute_local_to_global<
 TrilinosWrappers::SparseMatrix,
 LinearAlgebra::distributed:: BlockVector <double>>(
 const FullMatrix<double> &,
 const Vector<double> &,
 const std::vector<size_type> &,
 TrilinosWrappers::SparseMatrix &,
 LinearAlgebra::distributed:: BlockVector <double> &,
 bool,
 std::integral_constant<bool, false>) const;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template void AffineConstraints< double >::distribute_local_to_global<
 BlockSparseMatrix< double >,
 Vector< double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 BlockSparseMatrix< double > &,
 Vector< double > &,
 bool,
 std::integral_constant<bool, true>) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 BlockSparseMatrix< double >,
 BlockVector< double >>(const FullMatrix< double > &,
 const Vector< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 BlockSparseMatrix< double > &,
 BlockVector< double > &,
 bool,
 std::integral_constant<bool, true>) const;

 template void
 AffineConstraints< double >::distribute_local_to_global<BlockSparseMatrix< double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
 BlockSparseMatrix< double > &) const;

 template void
 AffineConstraints< double >::distribute_local_to_global<BlockSparseMatrix< double >>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 BlockSparseMatrix< double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template void AffineConstraints< float >::distribute_local_to_global<
 BlockSparseMatrix< float >,
 Vector< float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 BlockSparseMatrix< float > &,
 Vector< float > &,
 bool,
 std::integral_constant<bool, true>) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 BlockSparseMatrix< float >,
 BlockVector< float >>(const FullMatrix< float > &,
 const Vector< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 BlockSparseMatrix< float > &,
 BlockVector< float > &,
 bool,
 std::integral_constant<bool, true>) const;

 template void
 AffineConstraints< float >::distribute_local_to_global<BlockSparseMatrix< float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
 BlockSparseMatrix< float > &) const;

 template void
 AffineConstraints< float >::distribute_local_to_global<BlockSparseMatrix< float >>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 BlockSparseMatrix< float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template void AffineConstraints< double >::distribute_local_to_global<
 MatrixBlock<SparseMatrix< double >>>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const std::vector<AffineConstraints< double >::size_type> &,
 MatrixBlock<SparseMatrix< double >> &) const;

 template void AffineConstraints< double >::distribute_local_to_global<
 MatrixBlock<SparseMatrix< double >>>(
 const FullMatrix< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 const AffineConstraints< double > &,
 const std::vector<AffineConstraints< double >::size_type> &,
 MatrixBlock<SparseMatrix< double >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template void AffineConstraints< float >::distribute_local_to_global<
 MatrixBlock<SparseMatrix< float >>>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const std::vector<AffineConstraints< float >::size_type> &,
 MatrixBlock<SparseMatrix< float >> &) const;

 template void AffineConstraints< float >::distribute_local_to_global<
 MatrixBlock<SparseMatrix< float >>>(
 const FullMatrix< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 const AffineConstraints< float > &,
 const std::vector<AffineConstraints< float >::size_type> &,
 MatrixBlock<SparseMatrix< float >> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template void AffineConstraints< double >::distribute< Vector < double >>( Vector < double > &) const;

 template void
 AffineConstraints< double >::distribute<LinearAlgebra::distributed:: Vector < double >>(
 LinearAlgebra::distributed:: Vector < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template void AffineConstraints< double >::distribute< BlockVector < double >>( BlockVector < double > &) const;

 template void
 AffineConstraints< double >::distribute<LinearAlgebra::distributed:: BlockVector < double >>(
 LinearAlgebra::distributed:: BlockVector < double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template void AffineConstraints< float >::distribute< Vector < float >>( Vector < float > &) const;

 template void
 AffineConstraints< float >::distribute<LinearAlgebra::distributed:: Vector < float >>(
 LinearAlgebra::distributed:: Vector < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template void AffineConstraints< float >::distribute< BlockVector < float >>( BlockVector < float > &) const;

 template void
 AffineConstraints< float >::distribute<LinearAlgebra::distributed:: BlockVector < float >>(
 LinearAlgebra::distributed:: BlockVector < float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template void AffineConstraints< double >::distribute<LinearAlgebra::Vector< double >>(
 LinearAlgebra::Vector< double > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template void AffineConstraints< float >::distribute<LinearAlgebra::Vector< float >>(
 LinearAlgebra::Vector< float > &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template void dealii::AffineConstraints<double>::condense< Vector <float>>(
  Vector <float> &) const;
 template void dealii::AffineConstraints<double>::distribute< Vector <float>>(
  Vector <float> &) const;

 template void dealii::AffineConstraints<double>::distribute<
 LinearAlgebra::distributed:: Vector <float>>(
 LinearAlgebra::distributed:: Vector <float> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template void dealii::AffineConstraints<double>::condense< BlockVector <float>>(
  BlockVector <float> &) const;
 template void dealii::AffineConstraints<double>::distribute< BlockVector <float>>(
  BlockVector <float> &) const;

 template void dealii::AffineConstraints<double>::distribute<
 LinearAlgebra::distributed:: BlockVector <float>>(
 LinearAlgebra::distributed:: BlockVector <float> &) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  Vector<double>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  Vector<float>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  BlockVector<double>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  BlockVector<float>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::Vector<double>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::Vector<float>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::distributed::Vector<double>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::distributed::Vector<float>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::distributed::BlockVector<double>  &vec);
 }
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
namespace internal
 {
 namespace AffineConstraintsImplementation
 {
 template void
 set_zero_all(const std::vector<types::global_dof_index> &,  LinearAlgebra::distributed::BlockVector<float>  &vec);
 }
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
