// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  1 ,
  double >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  1 ,
  float >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  2 ,
  double >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  2 ,
  float >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  3 ,
  double >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_sparsity_pattern< 1 ,
  3 ,
  float >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  1 ,
  double >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  1 ,
  float >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  2 ,
  double >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  2 ,
  float >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  3 ,
  double >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_sparsity_pattern< 2 ,
  3 ,
  float >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  1 ,
  double >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  1 ,
  float >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  2 ,
  double >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  2 ,
  float >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  3 ,
  double >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_sparsity_pattern< 3 ,
  3 ,
  float >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  1 ,
  SparseMatrix<double> >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  1 ,
  SparseMatrix<float> >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  1 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
#if  1  <=  1  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  1 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 1 ,  1 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  2 ,
  SparseMatrix<double> >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  2 ,
  SparseMatrix<float> >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  2 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
#if  1  <=  2  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  2 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 1 ,  2 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  3 ,
  SparseMatrix<double> >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  3 ,
  SparseMatrix<float> >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  3 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
#if  1  <=  3  &&  1  > 1
 template void create_interpolation_matrix< 1 ,
  3 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 1 ,  3 > &space_dh,
 const Particles::ParticleHandler< 1 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  1 ,
  SparseMatrix<double> >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  1 ,
  SparseMatrix<float> >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  1 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
#if  2  <=  1  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  1 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 2 ,  1 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  2 ,
  SparseMatrix<double> >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  2 ,
  SparseMatrix<float> >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  2 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
#if  2  <=  2  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  2 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 2 ,  2 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  3 ,
  SparseMatrix<double> >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  3 ,
  SparseMatrix<float> >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  3 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
#if  2  <=  3  &&  2  > 1
 template void create_interpolation_matrix< 2 ,
  3 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 2 ,  3 > &space_dh,
 const Particles::ParticleHandler< 2 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  1 ,
  SparseMatrix<double> >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  1 ,
  SparseMatrix<float> >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  1 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
#if  3  <=  1  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  1 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 3 ,  1 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  1 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  2 ,
  SparseMatrix<double> >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  2 ,
  SparseMatrix<float> >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(48))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  2 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(49))
#if  3  <=  2  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  2 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 3 ,  2 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  2 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(50))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  3 ,
  SparseMatrix<double> >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
  SparseMatrix<double>  & matrix,
 const AffineConstraints< SparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(51))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  3 ,
  SparseMatrix<float> >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
  SparseMatrix<float>  & matrix,
 const AffineConstraints< SparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(52))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  3 ,
  BlockSparseMatrix<double> >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<double>  & matrix,
 const AffineConstraints< BlockSparseMatrix<double> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(53))
#if  3  <=  3  &&  3  > 1
 template void create_interpolation_matrix< 3 ,
  3 ,
  BlockSparseMatrix<float> >(
 const DoFHandler< 3 ,  3 > &space_dh,
 const Particles::ParticleHandler< 3 ,
  3 >
 & particle_handler,
  BlockSparseMatrix<float>  & matrix,
 const AffineConstraints< BlockSparseMatrix<float> ::value_type> &constraints,
 const ComponentMask & space_comps);
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
