// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template  double  HDF5Object::get_attribute< double >(
 const std::string &attr_name) const;
 template void HDF5Object::set_attribute< double >(
 const std::string &attr_name,  double  value);

 template std::vector< double > DataSet::read<std::vector< double >>();
 template Vector< double > DataSet::read<Vector< double >>();
 template FullMatrix< double > DataSet::read<FullMatrix< double >>();

 template std::vector< double > DataSet::read_selection<std::vector< double >>(
 const std::vector<hsize_t> &coordinates);
 template Vector< double > DataSet::read_selection<Vector< double >>(
 const std::vector<hsize_t> &coordinates);

 template std::vector< double > DataSet::read_hyperslab<std::vector< double >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template Vector< double > DataSet::read_hyperslab<Vector< double >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template FullMatrix< double > DataSet::read_hyperslab<FullMatrix< double >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);

 template std::vector< double > DataSet::read_hyperslab<std::vector< double >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template Vector< double > DataSet::read_hyperslab<Vector< double >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template FullMatrix< double > DataSet::read_hyperslab<FullMatrix< double >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::read_none< double >();

 template void DataSet::write<std::vector< double >>(
 const std::vector< double > &data);
 template void DataSet::write<Vector< double >>(const Vector< double > &data);
 template void DataSet::write<FullMatrix< double >>(
 const FullMatrix< double > &data);

 template void DataSet::write_selection<std::vector< double >>(
 const std::vector< double > &data, const std::vector<hsize_t> &coordinates);
 template void DataSet::write_selection<Vector< double >>(
 const Vector< double > &data, const std::vector<hsize_t> &coordinates);

 template void DataSet::write_hyperslab<std::vector< double >>(
 const std::vector< double > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<Vector< double >>(
 const Vector< double > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<FullMatrix< double >>(
 const FullMatrix< double > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);

 template void DataSet::write_hyperslab<std::vector< double >>(
 const std::vector< double > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<Vector< double >>(
 const Vector< double > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<FullMatrix< double >>(
 const FullMatrix< double > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::write_none< double >();

 template DataSet Group::create_dataset< double >(
 const std::string &name, const std::vector<hsize_t> &dimensions) const;

 template void Group::write_dataset<std::vector< double >>(
 const std::string &name, const std::vector< double > &data) const;

 template void Group::write_dataset<Vector< double >>(
 const std::string &name, const Vector< double > &data) const;

 template void Group::write_dataset<FullMatrix< double >>(
 const std::string &name, const FullMatrix< double > &data) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template  float  HDF5Object::get_attribute< float >(
 const std::string &attr_name) const;
 template void HDF5Object::set_attribute< float >(
 const std::string &attr_name,  float  value);

 template std::vector< float > DataSet::read<std::vector< float >>();
 template Vector< float > DataSet::read<Vector< float >>();
 template FullMatrix< float > DataSet::read<FullMatrix< float >>();

 template std::vector< float > DataSet::read_selection<std::vector< float >>(
 const std::vector<hsize_t> &coordinates);
 template Vector< float > DataSet::read_selection<Vector< float >>(
 const std::vector<hsize_t> &coordinates);

 template std::vector< float > DataSet::read_hyperslab<std::vector< float >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template Vector< float > DataSet::read_hyperslab<Vector< float >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template FullMatrix< float > DataSet::read_hyperslab<FullMatrix< float >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);

 template std::vector< float > DataSet::read_hyperslab<std::vector< float >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template Vector< float > DataSet::read_hyperslab<Vector< float >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template FullMatrix< float > DataSet::read_hyperslab<FullMatrix< float >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::read_none< float >();

 template void DataSet::write<std::vector< float >>(
 const std::vector< float > &data);
 template void DataSet::write<Vector< float >>(const Vector< float > &data);
 template void DataSet::write<FullMatrix< float >>(
 const FullMatrix< float > &data);

 template void DataSet::write_selection<std::vector< float >>(
 const std::vector< float > &data, const std::vector<hsize_t> &coordinates);
 template void DataSet::write_selection<Vector< float >>(
 const Vector< float > &data, const std::vector<hsize_t> &coordinates);

 template void DataSet::write_hyperslab<std::vector< float >>(
 const std::vector< float > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<Vector< float >>(
 const Vector< float > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<FullMatrix< float >>(
 const FullMatrix< float > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);

 template void DataSet::write_hyperslab<std::vector< float >>(
 const std::vector< float > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<Vector< float >>(
 const Vector< float > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<FullMatrix< float >>(
 const FullMatrix< float > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::write_none< float >();

 template DataSet Group::create_dataset< float >(
 const std::string &name, const std::vector<hsize_t> &dimensions) const;

 template void Group::write_dataset<std::vector< float >>(
 const std::string &name, const std::vector< float > &data) const;

 template void Group::write_dataset<Vector< float >>(
 const std::string &name, const Vector< float > &data) const;

 template void Group::write_dataset<FullMatrix< float >>(
 const std::string &name, const FullMatrix< float > &data) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template  std::complex<double>  HDF5Object::get_attribute< std::complex<double> >(
 const std::string &attr_name) const;
 template void HDF5Object::set_attribute< std::complex<double> >(
 const std::string &attr_name,  std::complex<double>  value);

 template std::vector< std::complex<double> > DataSet::read<std::vector< std::complex<double> >>();
 template Vector< std::complex<double> > DataSet::read<Vector< std::complex<double> >>();
 template FullMatrix< std::complex<double> > DataSet::read<FullMatrix< std::complex<double> >>();

 template std::vector< std::complex<double> > DataSet::read_selection<std::vector< std::complex<double> >>(
 const std::vector<hsize_t> &coordinates);
 template Vector< std::complex<double> > DataSet::read_selection<Vector< std::complex<double> >>(
 const std::vector<hsize_t> &coordinates);

 template std::vector< std::complex<double> > DataSet::read_hyperslab<std::vector< std::complex<double> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template Vector< std::complex<double> > DataSet::read_hyperslab<Vector< std::complex<double> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template FullMatrix< std::complex<double> > DataSet::read_hyperslab<FullMatrix< std::complex<double> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);

 template std::vector< std::complex<double> > DataSet::read_hyperslab<std::vector< std::complex<double> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template Vector< std::complex<double> > DataSet::read_hyperslab<Vector< std::complex<double> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template FullMatrix< std::complex<double> > DataSet::read_hyperslab<FullMatrix< std::complex<double> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::read_none< std::complex<double> >();

 template void DataSet::write<std::vector< std::complex<double> >>(
 const std::vector< std::complex<double> > &data);
 template void DataSet::write<Vector< std::complex<double> >>(const Vector< std::complex<double> > &data);
 template void DataSet::write<FullMatrix< std::complex<double> >>(
 const FullMatrix< std::complex<double> > &data);

 template void DataSet::write_selection<std::vector< std::complex<double> >>(
 const std::vector< std::complex<double> > &data, const std::vector<hsize_t> &coordinates);
 template void DataSet::write_selection<Vector< std::complex<double> >>(
 const Vector< std::complex<double> > &data, const std::vector<hsize_t> &coordinates);

 template void DataSet::write_hyperslab<std::vector< std::complex<double> >>(
 const std::vector< std::complex<double> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<Vector< std::complex<double> >>(
 const Vector< std::complex<double> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<FullMatrix< std::complex<double> >>(
 const FullMatrix< std::complex<double> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);

 template void DataSet::write_hyperslab<std::vector< std::complex<double> >>(
 const std::vector< std::complex<double> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<Vector< std::complex<double> >>(
 const Vector< std::complex<double> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<FullMatrix< std::complex<double> >>(
 const FullMatrix< std::complex<double> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::write_none< std::complex<double> >();

 template DataSet Group::create_dataset< std::complex<double> >(
 const std::string &name, const std::vector<hsize_t> &dimensions) const;

 template void Group::write_dataset<std::vector< std::complex<double> >>(
 const std::string &name, const std::vector< std::complex<double> > &data) const;

 template void Group::write_dataset<Vector< std::complex<double> >>(
 const std::string &name, const Vector< std::complex<double> > &data) const;

 template void Group::write_dataset<FullMatrix< std::complex<double> >>(
 const std::string &name, const FullMatrix< std::complex<double> > &data) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template  std::complex<float>  HDF5Object::get_attribute< std::complex<float> >(
 const std::string &attr_name) const;
 template void HDF5Object::set_attribute< std::complex<float> >(
 const std::string &attr_name,  std::complex<float>  value);

 template std::vector< std::complex<float> > DataSet::read<std::vector< std::complex<float> >>();
 template Vector< std::complex<float> > DataSet::read<Vector< std::complex<float> >>();
 template FullMatrix< std::complex<float> > DataSet::read<FullMatrix< std::complex<float> >>();

 template std::vector< std::complex<float> > DataSet::read_selection<std::vector< std::complex<float> >>(
 const std::vector<hsize_t> &coordinates);
 template Vector< std::complex<float> > DataSet::read_selection<Vector< std::complex<float> >>(
 const std::vector<hsize_t> &coordinates);

 template std::vector< std::complex<float> > DataSet::read_hyperslab<std::vector< std::complex<float> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template Vector< std::complex<float> > DataSet::read_hyperslab<Vector< std::complex<float> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);
 template FullMatrix< std::complex<float> > DataSet::read_hyperslab<FullMatrix< std::complex<float> >>(
 const std::vector<hsize_t> &offset, const std::vector<hsize_t> &count);

 template std::vector< std::complex<float> > DataSet::read_hyperslab<std::vector< std::complex<float> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template Vector< std::complex<float> > DataSet::read_hyperslab<Vector< std::complex<float> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template FullMatrix< std::complex<float> > DataSet::read_hyperslab<FullMatrix< std::complex<float> >>(
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::read_none< std::complex<float> >();

 template void DataSet::write<std::vector< std::complex<float> >>(
 const std::vector< std::complex<float> > &data);
 template void DataSet::write<Vector< std::complex<float> >>(const Vector< std::complex<float> > &data);
 template void DataSet::write<FullMatrix< std::complex<float> >>(
 const FullMatrix< std::complex<float> > &data);

 template void DataSet::write_selection<std::vector< std::complex<float> >>(
 const std::vector< std::complex<float> > &data, const std::vector<hsize_t> &coordinates);
 template void DataSet::write_selection<Vector< std::complex<float> >>(
 const Vector< std::complex<float> > &data, const std::vector<hsize_t> &coordinates);

 template void DataSet::write_hyperslab<std::vector< std::complex<float> >>(
 const std::vector< std::complex<float> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<Vector< std::complex<float> >>(
 const Vector< std::complex<float> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);
 template void DataSet::write_hyperslab<FullMatrix< std::complex<float> >>(
 const FullMatrix< std::complex<float> > & data,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &count);

 template void DataSet::write_hyperslab<std::vector< std::complex<float> >>(
 const std::vector< std::complex<float> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<Vector< std::complex<float> >>(
 const Vector< std::complex<float> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);
 template void DataSet::write_hyperslab<FullMatrix< std::complex<float> >>(
 const FullMatrix< std::complex<float> > & data,
 const std::vector<hsize_t> &data_dimensions,
 const std::vector<hsize_t> &offset,
 const std::vector<hsize_t> &stride,
 const std::vector<hsize_t> &count,
 const std::vector<hsize_t> &block);

 template void DataSet::write_none< std::complex<float> >();

 template DataSet Group::create_dataset< std::complex<float> >(
 const std::string &name, const std::vector<hsize_t> &dimensions) const;

 template void Group::write_dataset<std::vector< std::complex<float> >>(
 const std::string &name, const std::vector< std::complex<float> > &data) const;

 template void Group::write_dataset<Vector< std::complex<float> >>(
 const std::string &name, const Vector< std::complex<float> > &data) const;

 template void Group::write_dataset<FullMatrix< std::complex<float> >>(
 const std::string &name, const FullMatrix< std::complex<float> > &data) const;
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
