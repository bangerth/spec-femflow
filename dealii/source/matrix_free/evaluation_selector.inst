// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void SelectEvaluator< 1 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void SelectEvaluator< 1 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void SelectEvaluator< 1 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void SelectEvaluator< 1 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void SelectEvaluator< 1 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void SelectEvaluator< 1 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 1 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void SelectEvaluator< 2 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void SelectEvaluator< 2 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void SelectEvaluator< 2 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void SelectEvaluator< 2 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void SelectEvaluator< 2 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void SelectEvaluator< 2 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 2 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void SelectEvaluator< 3 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  1 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void SelectEvaluator< 3 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  1 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void SelectEvaluator< 3 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  2 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void SelectEvaluator< 3 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  2 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void SelectEvaluator< 3 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  3 ,
 VectorizedArray< double >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< double >> &shape_info,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 VectorizedArray< double > *,
 const bool,
 const bool,
 const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void SelectEvaluator< 3 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 integrate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);

 template void SelectEvaluator< 3 ,
 -1,
 0,
  3 ,
 VectorizedArray< float >>::
 evaluate(const internal::MatrixFreeFunctions::ShapeInfo<
 VectorizedArray< float >> &shape_info,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 VectorizedArray< float > *,
 const bool,
 const bool,
 const bool);
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
