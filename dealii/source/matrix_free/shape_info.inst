// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< double >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< double >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::ShapeInfo< float >::
 ShapeInfo(const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< float >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  1  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  1  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  1  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 1 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
#if  2  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
#if  2  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
#if  2  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 2 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
#if  3  <=  1 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  1 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
#if  3  <=  2 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  2 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
#if  3  <=  3 
 template bool
 internal::MatrixFreeFunctions::ShapeInfo<double>::is_supported(
 const FiniteElement< 3 ,  3 > &);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature< 1 > &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

#if  1  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 1 ,  1 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature< 2 > &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

#if  2  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 2 ,  2 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,1> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,1> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,2> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,2> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,4> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,4> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<double,8> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<double,8> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature< 3 > &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

#if  3  > 1
 template internal::MatrixFreeFunctions::
 ShapeInfo< VectorizedArray<float,16> >::ShapeInfo(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);

 template void
 internal::MatrixFreeFunctions::ShapeInfo< VectorizedArray<float,16> >::reinit(
 const Quadrature<1> &,
 const FiniteElement< 3 ,  3 > &,
 const unsigned int);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<double,1> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<float,1> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<double,2> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<float,4> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<double,4> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<float,8> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<double,8> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
template struct internal::MatrixFreeFunctions::ShapeInfo<
  VectorizedArray<float,16> >;
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
