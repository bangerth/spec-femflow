// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  BlockVector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  BlockVector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  BlockVector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::distributed::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::distributed::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::distributed::Vector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::distributed::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::distributed::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::distributed::Vector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::distributed::BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::distributed::BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::distributed::BlockVector<double> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
namespace Functions
 {
 template class FEFieldFunction< 1 ,  LinearAlgebra::distributed::BlockVector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
namespace Functions
 {
 template class FEFieldFunction< 2 ,  LinearAlgebra::distributed::BlockVector<float> >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
namespace Functions
 {
 template class FEFieldFunction< 3 ,  LinearAlgebra::distributed::BlockVector<float> >;
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
