// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
namespace NonMatching
 {
 template class MeshClassifier< 1 >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
namespace NonMatching
 {
 template class MeshClassifier< 2 >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
namespace NonMatching
 {
 template class MeshClassifier< 3 >;
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  BlockVector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  BlockVector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  BlockVector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::Vector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<double>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
namespace NonMatching
 {
 template MeshClassifier< 1 >::MeshClassifier(
 const DoFHandler< 1 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
namespace NonMatching
 {
 template MeshClassifier< 2 >::MeshClassifier(
 const DoFHandler< 2 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &);
 }
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
namespace NonMatching
 {
 template MeshClassifier< 3 >::MeshClassifier(
 const DoFHandler< 3 > &,
 const  LinearAlgebra::distributed::BlockVector<float>  &);
 }
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
