// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template void DoFTools::make_boundary_sparsity_pattern< 1 ,
  1 ,
  double >(
 const DoFHandler< 1 > & dof,
 const std::map<types::boundary_id,
 const Function< 1 ,  double > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  1  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 1 ,
  1  + 1,
  double >(
 const DoFHandler< 1 ,  1  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 1  + 1,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  1  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 1 ,
  1  + 2,
  double >(
 const DoFHandler< 1 ,  1  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 1  + 2,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template void DoFTools::make_boundary_sparsity_pattern< 2 ,
  2 ,
  double >(
 const DoFHandler< 2 > & dof,
 const std::map<types::boundary_id,
 const Function< 2 ,  double > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  2  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 2 ,
  2  + 1,
  double >(
 const DoFHandler< 2 ,  2  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 2  + 1,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  2  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 2 ,
  2  + 2,
  double >(
 const DoFHandler< 2 ,  2  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 2  + 2,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template void DoFTools::make_boundary_sparsity_pattern< 3 ,
  3 ,
  double >(
 const DoFHandler< 3 > & dof,
 const std::map<types::boundary_id,
 const Function< 3 ,  double > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  3  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 3 ,
  3  + 1,
  double >(
 const DoFHandler< 3 ,  3  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 3  + 1,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  3  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 3 ,
  3  + 2,
  double >(
 const DoFHandler< 3 ,  3  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 3  + 2,  double > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template void DoFTools::make_boundary_sparsity_pattern< 1 ,
  1 ,
  float >(
 const DoFHandler< 1 > & dof,
 const std::map<types::boundary_id,
 const Function< 1 ,  float > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  1  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 1 ,
  1  + 1,
  float >(
 const DoFHandler< 1 ,  1  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 1  + 1,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  1  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 1 ,
  1  + 2,
  float >(
 const DoFHandler< 1 ,  1  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 1  + 2,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template void DoFTools::make_boundary_sparsity_pattern< 2 ,
  2 ,
  float >(
 const DoFHandler< 2 > & dof,
 const std::map<types::boundary_id,
 const Function< 2 ,  float > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  2  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 2 ,
  2  + 1,
  float >(
 const DoFHandler< 2 ,  2  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 2  + 1,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  2  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 2 ,
  2  + 2,
  float >(
 const DoFHandler< 2 ,  2  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 2  + 2,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template void DoFTools::make_boundary_sparsity_pattern< 3 ,
  3 ,
  float >(
 const DoFHandler< 3 > & dof,
 const std::map<types::boundary_id,
 const Function< 3 ,  float > *> &boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#if  3  < 3

 template void
 DoFTools::make_boundary_sparsity_pattern< 3 ,
  3  + 1,
  float >(
 const DoFHandler< 3 ,  3  + 1> &dof,
 const std::map<types::boundary_id,
 const Function< 3  + 1,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);

#endif

#if  3  == 1
 template void
 DoFTools::make_boundary_sparsity_pattern< 3 ,
  3  + 2,
  float >(
 const DoFHandler< 3 ,  3  + 2> &dof,
 const std::map<types::boundary_id,
 const Function< 3  + 2,  float > *>
 & boundary_ids,
 const std::vector<types::global_dof_index> &dof_to_boundary_mapping,
 SparsityPatternBase & sparsity);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template void
 DoFTools::make_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 1 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#if  1  < 3

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 1 ,  1  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif

#if  1  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template void
 DoFTools::make_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 1 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#if  1  < 3

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 1 ,  1  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif

#if  1  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template void
 DoFTools::make_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 2 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#if  2  < 3

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 2 ,  2  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif

#if  2  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template void
 DoFTools::make_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 2 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#if  2  < 3

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 2 ,  2  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif

#if  2  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void
 DoFTools::make_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 3 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#if  3  < 3

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 3 ,  3  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif

#if  3  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< double > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void
 DoFTools::make_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 3 >::active_cell_iterator &,
 const unsigned int)> &);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#if  3  < 3

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<bool(
 const typename DoFHandler< 3 ,  3  + 1>::
 active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif

#if  3  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &,
 const Table<2, Coupling> &,
 SparsityPatternBase &,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id,
 const std::function<
 bool(const typename DoFHandler<1, 3>::active_cell_iterator &,
 const unsigned int)> &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const AffineConstraints< float > &,
 const bool,
 const types::subdomain_id);

#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void
 DoFTools::make_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 ,  1 > &dof_row,
 const DoFHandler< 1 ,  1 > &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern< 1 ,
  1 >(
 const DoFHandler< 1 > &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof, SparsityPatternBase &sparsity);

 template void
 DoFTools::make_flux_sparsity_pattern< 1 ,  1 >(
 const DoFHandler< 1 > &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

#if  1  < 3

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_flux_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 1 ,  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof_row,
 const DoFHandler< 1 ,  1  + 1> &dof_col,
 SparsityPatternBase & sparsity);

 template void
 DoFTools::make_boundary_sparsity_pattern< 1 ,
  1  + 1>(
 const DoFHandler< 1 ,  1  + 1> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

#endif


#if  1  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof_row,
 const DoFHandler<1, 3> &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof, SparsityPatternBase &sparsity);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void
 DoFTools::make_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 ,  2 > &dof_row,
 const DoFHandler< 2 ,  2 > &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern< 2 ,
  2 >(
 const DoFHandler< 2 > &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof, SparsityPatternBase &sparsity);

 template void
 DoFTools::make_flux_sparsity_pattern< 2 ,  2 >(
 const DoFHandler< 2 > &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

#if  2  < 3

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_flux_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 2 ,  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof_row,
 const DoFHandler< 2 ,  2  + 1> &dof_col,
 SparsityPatternBase & sparsity);

 template void
 DoFTools::make_boundary_sparsity_pattern< 2 ,
  2  + 1>(
 const DoFHandler< 2 ,  2  + 1> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

#endif


#if  2  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof_row,
 const DoFHandler<1, 3> &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof, SparsityPatternBase &sparsity);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void
 DoFTools::make_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 ,  3 > &dof_row,
 const DoFHandler< 3 ,  3 > &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern< 3 ,
  3 >(
 const DoFHandler< 3 > &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof, SparsityPatternBase &sparsity);

 template void
 DoFTools::make_flux_sparsity_pattern< 3 ,  3 >(
 const DoFHandler< 3 > &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

#if  3  < 3

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_flux_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);

 template void
 DoFTools::make_sparsity_pattern< 3 ,  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof_row,
 const DoFHandler< 3 ,  3  + 1> &dof_col,
 SparsityPatternBase & sparsity);

 template void
 DoFTools::make_boundary_sparsity_pattern< 3 ,
  3  + 1>(
 const DoFHandler< 3 ,  3  + 1> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

#endif


#if  3  == 3

 template void DoFTools::make_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof_row,
 const DoFHandler<1, 3> &dof_col,
 SparsityPatternBase & sparsity);

 template void DoFTools::make_boundary_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 const std::vector<types::global_dof_index> &,
 SparsityPatternBase &);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof, SparsityPatternBase &sparsity);

 template void DoFTools::make_flux_sparsity_pattern<1, 3>(
 const DoFHandler<1, 3> &dof,
 SparsityPatternBase & sparsity,
 const Table<2, Coupling> &,
 const Table<2, Coupling> &,
 const types::subdomain_id);
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template Table<2, DoFTools::Coupling>
 DoFTools::dof_couplings_from_component_couplings(
 const FiniteElement< 1 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);

 template std::vector<Table<2, DoFTools::Coupling>>
 DoFTools::dof_couplings_from_component_couplings(
 const hp::FECollection< 1 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template Table<2, DoFTools::Coupling>
 DoFTools::dof_couplings_from_component_couplings(
 const FiniteElement< 2 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);

 template std::vector<Table<2, DoFTools::Coupling>>
 DoFTools::dof_couplings_from_component_couplings(
 const hp::FECollection< 2 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template Table<2, DoFTools::Coupling>
 DoFTools::dof_couplings_from_component_couplings(
 const FiniteElement< 3 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);

 template std::vector<Table<2, DoFTools::Coupling>>
 DoFTools::dof_couplings_from_component_couplings(
 const hp::FECollection< 3 > &fe,
 const Table<2, DoFTools::Coupling> & component_couplings);
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
