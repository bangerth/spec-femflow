// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
#if  1  <=  1 
 template class DoFHandler< 1 ,  1 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  1 ,
  1 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 1 ,
  1 >(
 DoFHandler< 1 ,  1 > &);

 template unsigned int
 dominated_future_fe_on_children< 1 ,
  1 >(
 const typename DoFHandler< 1 ,
  1 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
#if  1  <=  2 
 template class DoFHandler< 1 ,  2 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  1 ,
  2 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 1 ,
  2 >(
 DoFHandler< 1 ,  2 > &);

 template unsigned int
 dominated_future_fe_on_children< 1 ,
  2 >(
 const typename DoFHandler< 1 ,
  2 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
#if  1  <=  3 
 template class DoFHandler< 1 ,  3 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  1 ,
  3 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 1 ,
  3 >(
 DoFHandler< 1 ,  3 > &);

 template unsigned int
 dominated_future_fe_on_children< 1 ,
  3 >(
 const typename DoFHandler< 1 ,
  3 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
#if  2  <=  1 
 template class DoFHandler< 2 ,  1 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  2 ,
  1 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 2 ,
  1 >(
 DoFHandler< 2 ,  1 > &);

 template unsigned int
 dominated_future_fe_on_children< 2 ,
  1 >(
 const typename DoFHandler< 2 ,
  1 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
#if  2  <=  2 
 template class DoFHandler< 2 ,  2 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  2 ,
  2 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 2 ,
  2 >(
 DoFHandler< 2 ,  2 > &);

 template unsigned int
 dominated_future_fe_on_children< 2 ,
  2 >(
 const typename DoFHandler< 2 ,
  2 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
#if  2  <=  3 
 template class DoFHandler< 2 ,  3 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  2 ,
  3 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 2 ,
  3 >(
 DoFHandler< 2 ,  3 > &);

 template unsigned int
 dominated_future_fe_on_children< 2 ,
  3 >(
 const typename DoFHandler< 2 ,
  3 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
#if  3  <=  1 
 template class DoFHandler< 3 ,  1 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  3 ,
  1 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 3 ,
  1 >(
 DoFHandler< 3 ,  1 > &);

 template unsigned int
 dominated_future_fe_on_children< 3 ,
  1 >(
 const typename DoFHandler< 3 ,
  1 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
#if  3  <=  2 
 template class DoFHandler< 3 ,  2 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  3 ,
  2 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 3 ,
  2 >(
 DoFHandler< 3 ,  2 > &);

 template unsigned int
 dominated_future_fe_on_children< 3 ,
  2 >(
 const typename DoFHandler< 3 ,
  2 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#if  3  <=  3 
 template class DoFHandler< 3 ,  3 >;

 namespace internal
 {
 template std::string
 policy_to_string(const DoFHandlerImplementation::Policy::PolicyBase<
  3 ,
  3 > &);

 namespace hp
 {
 namespace DoFHandlerImplementation
 {
 template void
 communicate_future_fe_indices< 3 ,
  3 >(
 DoFHandler< 3 ,  3 > &);

 template unsigned int
 dominated_future_fe_on_children< 3 ,
  3 >(
 const typename DoFHandler< 3 ,
  3 >::cell_iterator
 &);
 }
 }
 }
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
